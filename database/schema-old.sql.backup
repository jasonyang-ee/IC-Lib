-- ============================================================================
-- AllegroSQL Database Schema - OrCAD CIS Compatible
-- ============================================================================
-- PostgreSQL 18
-- Compatible with OrCAD CIS Version 17.2
-- Date: 2025-10-08
-- ============================================================================

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ============================================================================
-- PART 1: CORE CONFIGURATION TABLES
-- ============================================================================

-- Table: component_categories
-- Stores all component categories with their table mappings
CREATE TABLE IF NOT EXISTS component_categories (
    id INTEGER PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    table_name VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table: manufacturers
-- Stores manufacturer information
CREATE TABLE IF NOT EXISTS manufacturers (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(255) UNIQUE NOT NULL,
    website VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table: distributors
-- Stores distributor information (Digikey, Mouser, etc.)
CREATE TABLE IF NOT EXISTS distributors (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) UNIQUE NOT NULL,
    api_endpoint VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ============================================================================
-- PART 2: MASTER COMPONENTS TABLE (For AllegroSQL Web Interface)
-- ============================================================================

-- Table: components (Master component table)
-- Aggregates all components from category tables for web interface
CREATE TABLE IF NOT EXISTS components (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    category_id INTEGER REFERENCES component_categories(id) ON DELETE CASCADE,
    part_number VARCHAR(255) UNIQUE NOT NULL,
    manufacturer_id UUID REFERENCES manufacturers(id),
    manufacturer_pn VARCHAR(255),
    description TEXT,
    value VARCHAR(255),
    pcb_footprint VARCHAR(500),
    package_size VARCHAR(100),
    datasheet_url VARCHAR(500),
    status VARCHAR(50) DEFAULT 'Active',
    notes TEXT,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100)
);

-- ============================================================================
-- PART 3: CATEGORY-SPECIFIC TABLES (OrCAD CIS Source Tables)
-- ============================================================================

-- ----------------------------------------------------------------------------
-- 1. CAPACITORS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS capacitors (
    -- Common Fields (CIS Required)
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Capacitor-Specific Fields
    dielectric_type VARCHAR(100),
    equivalent_series_resistance VARCHAR(50),
    temperature_coefficient VARCHAR(50),
    tolerance VARCHAR(50),
    rated_voltage VARCHAR(50),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 1,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 2. RESISTORS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS resistors (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Resistor-Specific Fields
    tolerance VARCHAR(50),
    power_rating VARCHAR(50),
    temperature_coefficient VARCHAR(50),
    resistance VARCHAR(50),
    resistor_type VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 2,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 3. ICs (INTEGRATED CIRCUITS) TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS ics (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- IC-Specific Fields
    ic_type VARCHAR(100),
    logic_family VARCHAR(100),
    pin_count VARCHAR(50),
    supply_voltage VARCHAR(50),
    interface_type VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 3,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 4. DIODES TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS diodes (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Diode-Specific Fields
    diode_type VARCHAR(100),
    forward_voltage VARCHAR(50),
    reverse_voltage VARCHAR(50),
    wavelength VARCHAR(50),
    color VARCHAR(50),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 4,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 5. INDUCTORS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS inductors (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Inductor-Specific Fields
    inductance VARCHAR(50),
    tolerance VARCHAR(50),
    current_rating VARCHAR(50),
    dc_resistance VARCHAR(50),
    core_material VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 5,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 6. CONNECTORS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS connectors (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Connector-Specific Fields
    contact_current VARCHAR(50),
    contact_gender VARCHAR(50),
    pitch VARCHAR(50),
    num_contacts VARCHAR(50),
    contact_plating VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 6,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 7. CRYSTALS AND OSCILLATORS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS crystals_and_oscillators (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Crystal-Specific Fields
    frequency_tolerance VARCHAR(50),
    frequency_stability VARCHAR(50),
    load_capacitance VARCHAR(50),
    operating_mode VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 7,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 8. RELAYS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS relays (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Relay-Specific Fields
    coil_voltage VARCHAR(50),
    coil_current VARCHAR(50),
    contact_configuration VARCHAR(100),
    switching_current VARCHAR(50),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 8,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 9. SWITCHES TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS switches (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Switch-Specific Fields
    switch_type VARCHAR(100),
    contact_configuration VARCHAR(100),
    operating_force VARCHAR(50),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 9,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 10. TRANSFORMERS TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS transformers (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Transformer-Specific Fields
    primary_voltage VARCHAR(50),
    secondary_voltage VARCHAR(50),
    turns_ratio VARCHAR(50),
    power_rating VARCHAR(50),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 10,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ----------------------------------------------------------------------------
-- 11. MISC TABLE
-- ----------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS misc (
    -- Common Fields
    part_number VARCHAR(255) PRIMARY KEY,
    description TEXT,
    value VARCHAR(255) NOT NULL,
    pcb_footprint VARCHAR(500),
    manufacturer VARCHAR(255),
    manufacturer_pn VARCHAR(255),
    
    -- Package/Physical
    package_size VARCHAR(100),
    company_part_status VARCHAR(50) DEFAULT 'Active',
    implementation VARCHAR(100),
    implementation_type VARCHAR(100),
    
    -- CAD Integration
    class VARCHAR(100),
    alt_symbols TEXT,
    step_model VARCHAR(500),
    
    -- Simulation
    pspice_template TEXT,
    
    -- Documentation
    datasheet_url VARCHAR(500),
    notes TEXT,
    
    -- Misc-Specific Fields
    component_type VARCHAR(100),
    
    -- Internal tracking
    category_id INTEGER DEFAULT 11,
    
    -- Metadata
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ============================================================================
-- PART 4: SUPPORTING TABLES
-- ============================================================================

-- Table: component_specifications
-- Flexible key-value store for component specifications
-- This allows different components to have different specifications
CREATE TABLE IF NOT EXISTS component_specifications (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    component_id UUID REFERENCES components(id) ON DELETE CASCADE,
    spec_key VARCHAR(100) NOT NULL,
    spec_value TEXT,
    spec_unit VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(component_id, spec_key)
);

-- Table: distributor_info
-- Stores pricing and stock information from distributors
CREATE TABLE IF NOT EXISTS distributor_info (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    component_id UUID REFERENCES components(id) ON DELETE CASCADE,
    distributor_id UUID REFERENCES distributors(id) ON DELETE CASCADE,
    distributor_part_number VARCHAR(100),
    stock_quantity INTEGER DEFAULT 0,
    price_breaks JSONB, -- Store price breaks as JSON: [{"quantity": 1, "price": 1.50}, ...]
    currency VARCHAR(10) DEFAULT 'USD',
    product_url VARCHAR(500),
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(component_id, distributor_id)
);

-- Table: inventory
-- Tracks in-house inventory
CREATE TABLE IF NOT EXISTS inventory (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    component_id UUID REFERENCES components(id) ON DELETE CASCADE,
    location VARCHAR(200),
    quantity INTEGER DEFAULT 0,
    minimum_quantity INTEGER DEFAULT 0,
    purchase_date DATE,
    purchase_price DECIMAL(10, 2),
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table: footprint_sources
-- Tracks where footprints were downloaded from
CREATE TABLE IF NOT EXISTS footprint_sources (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    component_id UUID REFERENCES components(id) ON DELETE CASCADE,
    source_name VARCHAR(100), -- 'Ultra Librarian', 'SnapEDA', 'Manual'
    download_url VARCHAR(500),
    downloaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    file_format VARCHAR(50) -- 'Allegro', 'STEP', etc.
);

-- Create indexes for better query performance
CREATE INDEX idx_components_category ON components(category_id);
CREATE INDEX idx_components_manufacturer ON components(manufacturer_id);
CREATE INDEX idx_components_part_number ON components(part_number);
CREATE INDEX idx_component_specs_component ON component_specifications(component_id);
CREATE INDEX idx_distributor_info_component ON distributor_info(component_id);
CREATE INDEX idx_inventory_component ON inventory(component_id);

-- Create trigger to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_components_updated_at BEFORE UPDATE ON components
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_inventory_updated_at BEFORE UPDATE ON inventory
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_categories_updated_at BEFORE UPDATE ON component_categories
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Insert default categories
INSERT INTO component_categories (name, description, table_name) VALUES
    ('Resistor', 'Fixed and variable resistors', 'resistors'),
    ('Capacitor', 'Various types of capacitors', 'capacitors'),
    ('Inductor', 'Inductors and chokes', 'inductors'),
    ('IC', 'Integrated circuits', 'ics'),
    ('Diode', 'Diodes and rectifiers', 'diodes'),
    ('Transistor', 'BJT, MOSFET, and other transistors', 'transistors'),
    ('Connector', 'Connectors and terminals', 'connectors'),
    ('Crystal', 'Crystals and oscillators', 'crystals')
ON CONFLICT (name) DO NOTHING;

-- Insert default distributors
INSERT INTO distributors (name, api_endpoint) VALUES
    ('Digikey', 'https://api.digikey.com/v1'),
    ('Mouser', 'https://api.mouser.com/api/v1')
ON CONFLICT (name) DO NOTHING;

-- Views for easier querying

-- View: component_full_details
-- Combines component with manufacturer and category information
CREATE OR REPLACE VIEW component_full_details AS
SELECT 
    c.id,
    c.part_number,
    c.manufacturer_part_number,
    c.description,
    c.subcategory,
    cat.name as category_name,
    m.name as manufacturer_name,
    c.footprint_path,
    c.symbol_path,
    c.pad_path,
    c.datasheet_url,
    c.created_at,
    c.updated_at
FROM components c
LEFT JOIN component_categories cat ON c.category_id = cat.id
LEFT JOIN manufacturers m ON c.manufacturer_id = m.id;

-- View: inventory_summary
-- Shows inventory with component details
CREATE OR REPLACE VIEW inventory_summary AS
SELECT 
    i.id,
    c.part_number,
    c.description,
    cat.name as category,
    m.name as manufacturer,
    i.quantity,
    i.minimum_quantity,
    i.location,
    i.purchase_date,
    i.purchase_price
FROM inventory i
JOIN components c ON i.component_id = c.id
LEFT JOIN component_categories cat ON c.category_id = cat.id
LEFT JOIN manufacturers m ON c.manufacturer_id = m.id;
